services:

  api:
    container_name: drinkbeer-api
    depends_on:
      database:
        condition: service_healthy
    build:
      context: ./drinkbeer-api
      dockerfile: Dockerfile
      target: development
    environment:
      PORT: ${API_PORT}
      DATABASE_URL: postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@database:${POSTGRES_PORT:-5432}/${POSTGRES_DB}
    volumes:
      - ./drinkbeer-api/src:/app/src
      - ./drinkbeer-api/prisma:/app/prisma
      - ./drinkbeer-api/package.json:/app/package.json
      - /app/node_modules
      - /app/node_modules/.prisma
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - drinkbeer-network

  database:
    container_name: drinkbeer-db
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - drinkbeer-db-data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    restart: unless-stopped
    networks:
      - drinkbeer-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: drinkbeer-pgadmin
    depends_on:
      database:
        condition: service_started
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json:ro
    ports:
      - "${PGADMIN_PORT:-80}:80"
    restart: unless-stopped
    networks:
      - drinkbeer-network

volumes:
  drinkbeer-db-data:

networks:
  drinkbeer-network:
    driver: bridge